# Common
alias gi='git init --initial-branch=main'
alias gib='git init --bare'
alias gs='git status'
alias ga='git add'
alias gaa='git add --all'

# Remotes
alias gr='git remote'
alias grv='git remote -v'
alias gra='git remote add'
alias gru='git remote set-url'
alias grD='git remote rm'

# Logs
alias gl='git log'
alias glo='git log --oneline -10'
alias gld='git log --pretty=format:"%h%x09%an%x09%ad%x09%s" --date=short -20'
alias glg='git log --oneline --graph --all --decorate'

# Clone
alias gcl='git clone'
alias gcl1='git clone --depth 1'

# Branch / Checkout / Diff
alias gb='git branch'
alias gba='git branch -a'
alias gbu='git branch -u'
alias gbv='git branch -v'
alias gbm='git branch --merged'
alias gbD='git branch --delete'
alias gbrD='git push origin --delete'

alias gch='git checkout'
alias gchb='git checkout -b'
alias gchm='git checkout master'

# Worktree
alias gwl='git worktree list'
alias gwa='git_worktree_add'
git_worktree_add() { git worktree add "worktrees/$1"; }
alias gwr='git worktree remove'
alias gwp='git worktree prune'

# Diff / Show
alias gd='git diff'
alias gdn='git diff --name-status'
alias gdm='git diff origin/master'
alias gd~='git diff HEAD~'
alias gdo='git_diff_origin_branch'
git_diff_origin_branch() { git diff origin/$1; }
alias gss='git show --stat $1'

alias gdt='git difftool'

# Reset / Clean
alias gwRh='git reset --hard HEAD'
alias gwRS='git reset --soft HEAD~1'
alias gwRM='git reset --mixed HEAD~1'
alias gwRH='git reset --hard HEAD~1'

alias gCn='git clean -d --dry-run'
alias gCf='git clean -d --force'

alias stash='git stash'
alias pop='git stash pop'
alias cache='git rm -r --cached .'

# Fetch / Merge / Pull / Rebase / Push
alias fetch='git fetch'
alias pull='git pull'
alias pullf='pull --rebase'
alias push='git push --follow-tags'
alias pushf='push --force'
alias pushu='git push --set-upstream origin'


# Sync local repo with cloud repo
## Usage: glsync repo (trackall; pullall; git remote gitlab ...; fetchall; pushrall gitlab;)
alias showall='for remote in `git branch -r | grep -v "\->" | grep origin`; do echo ${remote#origin/} $remote; done;'
alias trackall='for remote in `git branch -r | grep -v "\->" | grep origin`; do git branch --track ${remote#origin/} $remote; done;'
alias fetchall='git fetch --all'
alias pullall='git pull --all'
alias pushrall='push_remote_all'
push_remote_all() { git push $1 --force --all; }

alias gm='git merge'
alias gma='git merge --abort'
alias gms='git merge --squash'
alias gmm='git merge master'
alias gmt='git mergetool'

alias gp1='git pull --depth 1'

alias gRa='git rebase --abort'
alias gRc='git rebase --continue'
alias gRs='git rebase --skip'
alias gRm='git rebase origin/master'
alias gRb='git_fetch_rebase_branch'; git_fetch_rebase_branch() { git fetch origin $1:$1; git rebase $1; }

# Remove sensitive and binary files from list git history. Push force all branches afterwards.
git_remove_filter_branch() {

    # [Git Filter Branch](https://help.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository#using-filter-branch)
    git filter-branch --force --index-filter "git rm -r --cached --ignore-unmatch $1" --prune-empty --tag-name-filter cat -- --all;

    ## After removal:
    git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin
    git reflog expire --expire=now --all
    git gc --prune=now

    ## Force push all, and also if there are tags:
    # git push origin --force --all
    # git push origin --force --tags
}
alias gRfb='git_remove_filter_branch'

# Commit
alias gcm='git commit -m'
alias gCm='git commit -am'
alias gcA='git commit --amend'
alias gcAm='git commit --amend -m'
alias gcv='git commit --verbose --all'

# Tag
alias tags='git tag -n'
alias gt='git tag'
alias gt1='git tag -a v1.0 -m'
alias gts='git show'
alias gta='git_tag_message'
git_tag_message() { git tag -a "$1" -m "$2"; }

# Submodules
alias gS='git submodule'
alias gSa='git submodule add'
alias gSu='git submodule update --init --recursive'
alias gSr='git submodule foreach --recursive'
alias gSp='git pull --recurse-submodules'


# Archive / Extract
alias gar='git archive HEAD --format=zip > "../${PWD##*/}.zip"'
